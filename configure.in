AC_INIT(src/rug.in)

MAJOR_VERSION=2
MINOR_VERSION=0
MICRO_VERSION=1
VERSION=$MAJOR_VERSION.$MINOR_VERSION.$MICRO_VERSION

AM_INIT_AUTOMAKE(rug, $VERSION)

#AC_SUBST(MAJOR_VERSION)
#AC_SUBST(MINOR_VERSION)
#AC_SUBST(MICRO_VERSION)

#AC_DEFINE_UNQUOTED(MAJOR_VERSION, $MAJOR_VERSION)
#AC_DEFINE_UNQUOTED(MINOR_VERSION, $MINOR_VERSION)
#AC_DEFINE_UNQUOTED(MICRO_VERSION, $MICRO_VERSION)

AM_MAINTAINER_MODE

AM_PATH_PYTHON(2.2)

if test x$HAVE_PYTHON = xno; then
	AC_MSG_ERROR(Couldn't find python in the path)
fi


dnl This lets us explicitly disable the fast unmarshaller

use_fast_unmarshaller=yes
AC_ARG_ENABLE(unmarshaller,
	[   ---disable-unmarshaller    does not build the fast unmarshaller],
	use_fast_unmarshaller="disabled")


dnl Check for python distutils --- we need them to build the fast
dnl unmarshaller, but they aren't shipped as part of python 1.5
		
distutils_check="
import sys
from distutils.core import setup, Extension
sys.exit(0)"

AC_MSG_CHECKING(for python distutils)
have_distutils="no"
if $PYTHON -c "$distutils_check" 1>&AC_FD_CC 2>&AC_FD_CC; then
   have_distutils="yes"
fi
AC_MSG_RESULT($have_distutils)


if test "x$have_distutils" = "xno"; then
   use_fast_unmarshaller="requires distutils"
fi

AM_CONDITIONAL(FAST_UNMARSHALLER, test x"$use_fast_unmarshaller" = "xyes")


DDIR=`echo $datadir | sed -e "s,"'${prefix}'",$prefix,"`
AC_SUBST(DDIR)

# FIXME: We assume exec_prefix == prefix, which is probably bad
LIBDIR=`echo $libdir | sed -e "s,"'${exec_prefix}'",$prefix,"`
AC_SUBST(LIBDIR)

AC_OUTPUT([
Makefile
unmarshaller/Makefile
src/Makefile
src/rug
])


echo "

Configuration:

  Prefix:             ${prefix}

  Python Distutils:   ${have_distutils}
  Fast Unmarshaller:  ${use_fast_unmarshaller}

"
